name: build, push and deploy
on:
  push:
    branches:
      - blue-green-deployment
  pull_request:

env:
  AWS_REGION: us-east-1
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Dockerhub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: list files
        run: ls -l
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sklearn_flask:latest -f Dockerfile .
      - name: Push image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/sklearn_flask:latest
  
  # in_place_deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to server
  #       uses: appleboy/ssh-action@master
  #       # https://github.com/marketplace/actions/ssh-remote-commands
  #       with:
  #         host: ${{secrets.HOST}}
  #         key: ${{secrets.SSH_PRIVATE_KEY}}
  #         username: ${{secrets.USER}}
  #         script: |
  #           whoami
  #           echo "Pull the latest image"
  #           docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sklearn_flask:latest
  #           echo "Stop and remove container"
  #           if docker ps -a --format '{{.Names}}' | grep -q '^sklearn_flask$'; then
  #             docker stop sklearn_flask && docker rm sklearn_flask
  #           fi
  #           echo "Run the container"
  #           docker run -d -p 8000:8000 --name sklearn_flask ${{ secrets.DOCKERHUB_USERNAME }}/sklearn_flask:latest
  AWSCodeDeploy-Deploy:
    runs-on: ubuntu-latest
    needs: build
    # These permissions are needed to interact with GitHub's OIDC Token endpoint. ( IAMROLE_GITHUB, WE CAN GET THIS FROM THE CLOUD FORMATION OUTPUT)
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ env.AWS_REGION }}
    - run: |
        echo "Deploying branch ${GITHUB_REF#refs/heads/} to AWS"
        commit_hash=`git rev-parse HEAD`
        aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
